{
  "info": {
    "_postman_id": "2c0d6b1b-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
    "name": "Messaging App API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Obtain JWT Token",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"username\": \"{{username}}\",\n  \"password\": \"{{password}}\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/token/",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "api",
            "token",
            ""
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Token obtained', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "var json = pm.response.json();",
              "if (json.access) {",
              "    pm.environment.set('access_token', json.access);",
              "}"]
          }
        }
      ]
    },
    {
      "name": "Refresh JWT Token",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"refresh\": \"{{refresh_token}}\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/token/refresh/",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "api",
            "token",
            "refresh",
            ""
          ]
        }
      },
      "response": []
    },
    {
      "name": "Create Conversation",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"participants\": [\"{{participant1_id}}\", \"{{participant2_id}}\"]\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/conversations/",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "api",
            "conversations",
            ""
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Conversation created', function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "var json = pm.response.json();",
              "if (json.conversation_id) {",
              "    pm.environment.set('conversation_id', json.conversation_id);",
              "}"]
          }
        }
      ]
    },
    {
      "name": "Create Message",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"conversation\": \"{{conversation_id}}\",\n  \"sender\": \"{{sender_id}}\",\n  \"message_body\": \"Hello from Postman!\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/conversations/{{conversation_id}}/messages/",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "api",
            "conversations",
            "{{conversation_id}}",
            "messages",
            ""
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Message created', function () {",
              "    pm.response.to.have.status(201);",
              "});"]
          }
        }
      ]
    },
    {
      "name": "List Conversations",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}"
          }
        ],
        "url": {
          "raw": "{{base_url}}/api/conversations/",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "api",
            "conversations",
            ""
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('List conversations', function () {",
              "    pm.response.to.have.status(200);",
              "});"]
          }
        }
      ]
    },
    {
      "name": "List Messages",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}"
          }
        ],
        "url": {
          "raw": "{{base_url}}/api/conversations/{{conversation_id}}/messages/",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "api",
            "conversations",
            "{{conversation_id}}",
            "messages",
            ""
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('List messages', function () {",
              "    pm.response.to.have.status(200);",
              "});"]
          }
        }
      ]
    },
    {
      "name": "Unauthorized access - List Conversations",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/api/conversations/",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "api",
            "conversations",
            ""
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Unauthorized access', function () {",
              "    pm.expect(pm.response.code).to.be.oneOf([401, 403]);",
              "});"]
          }
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8000"
    },
    {
      "key": "username",
      "value": "admin"
    },
    {
      "key": "password",
      "value": "admin"
    }
  ]
}
